{% extends 'base.html.twig' %}

{% block title %}Les rapports{% endblock %}

{% block body %}
    <div class="reports page-with-background" id="reports">
        <div class="container-fluid mt-3 mt-md-5 pt-3">
            <div class="row">
                <div class="col-md-7">
                    <div class="page-title">
                        <h1>Les rapports</h1>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid my-3 my-md-5 filters-bar">
            <div class="row">
                {% include './listUtils/search.html.twig' %}
                {% include './listUtils/authorFilter.html.twig' %}
                {% include './listUtils/reset.html.twig' %}
            </div>
        </div>
        <div class="container-fluid">
            <div class="row list">
                {% for report in reports %}
                    <div class="col-md-4 mb-4">
                        {% include './report/reportCard.html.twig' with {'report': report} %}
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
{% endblock %}

{% block bottom_scripts %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/multiple-select-js/dist/css/multiple-select.css">
    <script src="https://cdn.jsdelivr.net/npm/multiple-select-js/dist/js/multiple-select.js"></script>
    <script>
        const options = {
            valueNames: [ 'author', 'title' ],
        };

        const list = new List('reports', options);
        const activeFilters = [];
    </script>
    {% include './listUtils/filterList.html.twig' %}
    {% include './listUtils/authorScripts.html.twig' %}
    <script>
        new MultipleSelect('#select-multiple-author', {
            placeholder: 'Filtre par auteur',
        })
    </script>
    <script>
        const onStickyChangeBackground = (event) => {
            if (event[0].isIntersecting) {
                document.querySelector('.filters-bar').classList.remove('filters-bar-filled')
            } else {
                document.querySelector('.filters-bar').classList.add('filters-bar-filled')
            }
        }
        const observer = new IntersectionObserver(onStickyChangeBackground, {
            rootMargin: '-1px 0px 0px 0px',
            threshold: [1],
        });

        observer.observe(document.querySelector('.filters-bar'));
    </script>
{% endblock %}