security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory:
          memory:
            users:
               amace: { password: '$argon2id$v=19$m=65536,t=4,p=1$BfPg1Yw7IScuoJUYYIxJ7g$88Juw3E5MiBA+QadqYczsAfCrwa7gc8IaTluxlxTbHk', roles: [ 'ROLE_ADMIN' ] } }
    encoders:
      # this internal class is used by Symfony to represent in-memory users
      Symfony\Component\Security\Core\User\User: 'auto'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
            logout:
              path:   app_logout
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
      - { path: ^/admin, roles: ROLE_ADMIN }